name: Master Pipeline

on:
  push:
    branches:
      - master
      - staging-ci

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ap-southeast-2

jobs:
  release_and_build_and_deploy:
    name: Release, build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
        with:
          lfs: true
          fetch-depth: '0'

      - name: Set environment as production
        if: github.ref == 'refs/heads/master'
        uses: allenevans/set-env@master
        with:
          DEFAULT_BUMP: major
          BUILD_ENV: prod

      - name: Set environment as staging
        if: github.ref != 'refs/heads/master'
        uses: allenevans/set-env@master
        with:
          CUSTOM_TAG: staging
          BUILD_ENV: staging

      - name: Delete existing staging release and tag
        run: | 
          chmod +x scripts/CleanupStaging.sh
          scripts/CleanupStaging.sh
          git push --delete origin staging || true

      - name: Create tag
        id: create_tag
        uses: anothrNick/github-tag-action@master
          
      - name: Create release
        id: create_release
        uses: actions/create-release@master
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: ${{ steps.create_tag.outputs.new_tag }}
          body: This is a build of the service executed by the [pipeline](https://github.com/racerr-io/webgl-client-service/actions/runs/${{ github.run_id }}).
          prerelease: ${{ github.ref != 'refs/heads/master' }}

      - name: Build and publish Docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: docker.pkg.github.com/racerr-io/webgl-client-service/webgl-client-service
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          tags: "${{ steps.create_tag.outputs.new_tag }},${{ env.BUILD_ENV }},staging"

      - name: Deploy to Amazon ECS
        run: aws ecs update-service --cluster racerr-io --service racerr --force-new-deployment